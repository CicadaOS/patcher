From 0a1974482ea4a95fcfeaf4dd7bdd5de27bf5dd42 Mon Sep 17 00:00:00 2001
From: Kshitij Gupta <kshitijgm@gmail.com>
Date: Sat, 10 Aug 2019 23:19:05 +0530
Subject: [PATCH 35/44] qcom_utils: Refactor for Q

- Certain make variables are used elsewhere in the build system,
  effectively making them "readonly". Refactor our utils to avoid
  conflicts; all conflicting vars are now prefixed with _ to resolve
  the issue.

Change-Id: I88609ee26d0b72942e3bae3d35b29801f029edf3
Signed-off-by: Kshitij Gupta <kshitijgm@gmail.com>
---
 core/qcom_utils.mk | 56 +++++++++++++++++++++++++++---------------------------
 1 file changed, 28 insertions(+), 28 deletions(-)

diff --git a/core/qcom_utils.mk b/core/qcom_utils.mk
index 7a9cae5..c41db42 100755
--- a/core/qcom_utils.mk
+++ b/core/qcom_utils.mk
@@ -43,23 +43,23 @@ QSD8K_BOARD_PLATFORMS := qsd8k
 
 
 # vars for use by utils
-empty :=
-space := $(empty) $(empty)
-colon := $(empty):$(empty)
-underscore := $(empty)_$(empty)
+_empty :=
+_space := $(_empty) $(_empty)
+_colon := $(_empty):$(_empty)
+_underscore := $(_empty)_$(_empty)
 
 # $(call match-word,w1,w2)
 # checks if w1 == w2
 # How it works
-#   if (w1-w2 not empty or w2-w1 not empty) then not_match else match
+#   if (w1-w2 not _empty or w2-w1 not _empty) then not_match else match
 #
-# returns true or empty
+# returns true or _empty
 #$(warning :$(1): :$(2): :$(subst $(1),,$(2)):) \
 #$(warning :$(2): :$(1): :$(subst $(2),,$(1)):) \
 #
 define match-word
 $(strip \
-  $(if $(or $(subst $(1),$(empty),$(2)),$(subst $(2),$(empty),$(1))),,true) \
+  $(if $(or $(subst $(1),$(_empty),$(2)),$(subst $(2),$(_empty),$(1))),,true) \
 )
 endef
 
@@ -67,15 +67,15 @@ endef
 # finds an exact match of word w in word list wlist
 #
 # How it works
-#   fill wlist spaces with colon
-#   wrap w with colon
+#   fill wlist _spaces with _colon
+#   wrap w with _colon
 #   search word w in list wl, if found match m, return stripped word w
 #
-# returns stripped word or empty
+# returns stripped word or _empty
 define find-word-in-list
 $(strip \
-  $(eval wl:= $(colon)$(subst $(space),$(colon),$(strip $(2)))$(colon)) \
-  $(eval w:= $(colon)$(strip $(1))$(colon)) \
+  $(eval wl:= $(_colon)$(subst $(_space),$(_colon),$(strip $(2)))$(_colon)) \
+  $(eval w:= $(_colon)$(strip $(1))$(_colon)) \
   $(eval m:= $(findstring $(w),$(wl))) \
   $(if $(m),$(1),) \
 )
@@ -84,11 +84,11 @@ endef
 # $(call match-word-in-list,w,wlist)
 # does an exact match of word w in word list wlist
 # How it works
-#   if the input word is not empty
+#   if the input word is not _empty
 #     return output of an exact match of word w in wordlist wlist
 #   else
-#     return empty
-# returns true or empty
+#     return _empty
+# returns true or _empty
 define match-word-in-list
 $(strip \
   $(if $(strip $(1)), \
@@ -102,10 +102,10 @@ endef
 #
 # How it works
 #   trim the words in wlist w
-#   if find-word-in-list returns not empty
+#   if find-word-in-list returns not _empty
 #     return true
 #   else
-#     return empty
+#     return _empty
 #
 define match-prefix
 $(strip \
@@ -126,25 +126,25 @@ $(if $(call match-word,$(BOARD_USES_$(1)_HARDWARE),true),$($(1)_BOARD_PLATFORMS)
 endef
 
 # $(call is-board-platform,bp)
-# returns true or empty
+# returns true or _empty
 define is-board-platform
 $(call match-word,$(1),$(TARGET_BOARD_PLATFORM))
 endef
 
 # $(call is-not-board-platform,bp)
-# returns true or empty
+# returns true or _empty
 define is-not-board-platform
 $(if $(call match-word,$(1),$(TARGET_BOARD_PLATFORM)),,true)
 endef
 
 # $(call is-board-platform-in-list,bpl)
-# returns true or empty
+# returns true or _empty
 define is-board-platform-in-list
 $(call match-word-in-list,$(TARGET_BOARD_PLATFORM),$(1))
 endef
 
 # $(call is-vendor-board-platform,vendor)
-# returns true or empty
+# returns true or _empty
 define is-vendor-board-platform
 $(strip \
   $(call match-word-in-list,$(TARGET_BOARD_PLATFORM),\
@@ -155,11 +155,11 @@ endef
 
 # $(call is-chipset-in-board-platform,chipset)
 # does a prefix match of chipset in TARGET_BOARD_PLATFORM
-# uses underscore as a delimiter
+# uses _underscore as a delimiter
 #
-# returns true or empty
+# returns true or _empty
 define is-chipset-in-board-platform
-$(call match-prefix,$(1),$(underscore),$(TARGET_BOARD_PLATFORM))
+$(call match-prefix,$(1),$(_underscore),$(TARGET_BOARD_PLATFORM))
 endef
 
 # $(call is-chipset-prefix-in-board-platform,prefix)
@@ -170,15 +170,15 @@ endef
 #   if ($(prefix)_ or $(prefix)a match in board platform)
 #     return true
 #   else
-#     return empty
+#     return _empty
 #
 define is-chipset-prefix-in-board-platform
 $(strip \
-  $(eval delim_a := $(empty)a$(empty)) \
+  $(eval delim_a := $(_empty)a$(_empty)) \
   $(if \
     $(or \
       $(call match-prefix,$(1),$(delim_a),$(TARGET_BOARD_PLATFORM)), \
-      $(call match-prefix,$(1),$(underscore),$(TARGET_BOARD_PLATFORM)), \
+      $(call match-prefix,$(1),$(_underscore),$(TARGET_BOARD_PLATFORM)), \
     ), \
     true, \
   ) \
@@ -226,7 +226,7 @@ endef
 # cnlist is combination/list of android codenames
 define is-android-codename-in-list
 $(strip \
-  $(eval acn := $(empty)) \
+  $(eval acn := $(_empty)) \
     $(foreach \
       i,$(1),\
       $(eval acn += \
-- 
2.7.4

