From d40934416532c67ad79f46975b04367043d27035 Mon Sep 17 00:00:00 2001
From: Sultanxda <sultanxda@gmail.com>
Date: Sun, 27 Aug 2017 01:37:14 -0700
Subject: [PATCH] Add installation assert on filesystem type (f2fs)

f2fs is no longer supported, so block installation for users who have any
of their partitions (/data, /cache, /system) formatted to f2fs.
---
 recovery/recovery_updater.cpp | 63 +++++++++++++++++++++++++++++++++++++++++++
 releasetools.py               |  2 ++
 2 files changed, 65 insertions(+)

diff --git a/recovery/recovery_updater.cpp b/recovery/recovery_updater.cpp
index 49e05a3..a41327f 100644
--- a/recovery/recovery_updater.cpp
+++ b/recovery/recovery_updater.cpp
@@ -18,6 +18,7 @@
 #include <sys/mman.h>
 #include <sys/stat.h>
 #include <sys/types.h>
+#include <sys/wait.h>
 #include <errno.h>
 #include <fcntl.h>
 #include <stdint.h>
@@ -26,6 +27,8 @@
 #include <string.h>
 #include <unistd.h>
 
+#include <string>
+
 #include "edify/expr.h"
 #include "updater/install.h"
 
@@ -42,6 +45,10 @@
 #define TZ_VER_STR_LEN 24
 #define TZ_VER_BUF_LEN 255
 
+#define CACHE_PART_PATH    "/dev/block/platform/msm_sdcc.1/by-name/cache"
+#define USERDATA_PART_PATH "/dev/block/platform/msm_sdcc.1/by-name/userdata"
+#define SYSTEM_PART_PATH   "/dev/block/platform/msm_sdcc.1/by-name/system"
+
 /* Boyer-Moore string search implementation from Wikipedia */
 
 /* Return longest suffix length of suffix ending at str[p] */
@@ -190,6 +197,62 @@ Value * VerifyTrustZoneFn(const char *name, State *state, const std::vector<std:
     return StringValue(strdup(ret ? "1" : "0"));
 }
 
+static int check_for_f2fs() {
+    std::string blkid_output;
+    int pipefd[2];
+    pid_t child;
+    FILE *fp;
+    int ret = 1;
+
+    if (pipe(pipefd) < 0)
+        return -1;
+
+    if ((child = fork()) < 0)
+        return -1;
+
+    if (child == 0) {
+        dup2(pipefd[1], STDOUT_FILENO);
+        close(pipefd[0]);
+        close(pipefd[1]);
+
+        execl("/sbin/blkid", "blkid", CACHE_PART_PATH,
+            USERDATA_PART_PATH, SYSTEM_PART_PATH, NULL);
+        return -1;
+    }
+
+    waitpid(child, NULL, 0);
+    close(pipefd[1]);
+
+    fp = fdopen(pipefd[0], "r");
+
+    while (1) {
+        char c = fgetc(fp);
+        if (feof(fp))
+            break;
+        blkid_output += c;
+    }
+
+    fclose(fp);
+
+    if (strstr(blkid_output.c_str(), "f2fs"))
+        ret = 0;
+
+    return ret;
+}
+
+Value * VerifyFsTypeFn(const char *name, State *state, const std::vector<std::unique_ptr<Expr>>& argv) {
+    int ret;
+
+    ret = check_for_f2fs();
+    if (ret < 0)
+        uiPrintf(state, "Failed to check partitions for F2FS!");
+    else if (ret == 0)
+        uiPrintf(state, "Error, F2FS is not supported! Use EXT4 instead.");
+
+    return StringValue(strdup(ret > 0 ? "1" : "0"));
+}
+
 void Register_librecovery_updater_oppo() {
     RegisterFunction("oppo.verify_trustzone", VerifyTrustZoneFn);
+    RegisterFunction("oppo.verify_fs_type", VerifyFsTypeFn);
 }
diff --git a/releasetools.py b/releasetools.py
index feee6ed..786c163 100755
--- a/releasetools.py
+++ b/releasetools.py
@@ -160,4 +160,6 @@ def AddTrustZoneAssertion(info):
     if len(versions) and '*' not in versions:
       cmd = 'assert(oppo.verify_trustzone(' + ','.join(['"%s"' % tz for tz in versions]) + ') == "1");'
       info.script.AppendExtra(cmd)
+  cmd = 'assert(oppo.verify_fs_type() == "1");'
+  info.script.AppendExtra(cmd)
   return
-- 
2.11.0.windows.1

