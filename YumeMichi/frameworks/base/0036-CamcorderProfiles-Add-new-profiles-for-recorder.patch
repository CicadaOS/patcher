From e4e9852b2abfd4213a47f65cbf499b28ebd86e97 Mon Sep 17 00:00:00 2001
From: Praveen Chavan <pchavan@codeaurora.org>
Date: Tue, 14 Jul 2015 12:38:37 -0700
Subject: [PATCH 36/37] CamcorderProfiles: Add new profiles for recorder

Below changes are squased:

video: Add QHD & 2K profile for recorder

add VGA and 4K-DCI profiles.

Change-Id: I4d23d7609225e921f6d0500bb03756bbfb2cde21
---
 core/jni/android_hardware_Camera.cpp          |  6 ++
 .../java/android/media/CamcorderProfile.java  | 75 ++++++++++++++++++-
 media/jni/android_media_MediaProfiles.cpp     |  9 ++-
 3 files changed, 87 insertions(+), 3 deletions(-)

diff --git a/core/jni/android_hardware_Camera.cpp b/core/jni/android_hardware_Camera.cpp
index 4fa56e3d436..b603622b0b7 100644
--- a/core/jni/android_hardware_Camera.cpp
+++ b/core/jni/android_hardware_Camera.cpp
@@ -504,6 +504,7 @@ void JNICameraContext::setCallbackMode(JNIEnv *env, bool installed, bool manualM
 static void android_hardware_Camera_setLongshot(JNIEnv *env, jobject thiz, jboolean enable)
 {
     ALOGV("setLongshot");
+#ifdef QCOM_HARDWARE
     JNICameraContext* context;
     status_t rc;
     sp<Camera> camera = get_native_camera(env, thiz, &context);
@@ -518,6 +519,7 @@ static void android_hardware_Camera_setLongshot(JNIEnv *env, jobject thiz, jbool
     if (rc != NO_ERROR) {
        jniThrowException(env, "java/lang/RuntimeException", "enabling longshot mode failed");
     }
+#endif
 }
 
 static void android_hardware_Camera_stopLongshot(JNIEnv *env, jobject thiz)
@@ -538,6 +540,7 @@ static void android_hardware_Camera_stopLongshot(JNIEnv *env, jobject thiz)
 static void android_hardware_Camera_sendHistogramData(JNIEnv *env, jobject thiz)
  {
    ALOGV("sendHistogramData" );
+#ifdef QCOM_HARDWARE
    JNICameraContext* context;
    status_t rc;
    sp<Camera> camera = get_native_camera(env, thiz, &context);
@@ -548,10 +551,12 @@ static void android_hardware_Camera_sendHistogramData(JNIEnv *env, jobject thiz)
    if (rc != NO_ERROR) {
       jniThrowException(env, "java/lang/RuntimeException", "send histogram data failed");
     }
+#endif
  }
  static void android_hardware_Camera_setHistogramMode(JNIEnv *env, jobject thiz, jboolean mode)
  {
    ALOGV("setHistogramMode: mode:%d", (int)mode);
+#ifdef QCOM_HARDWARE
    JNICameraContext* context;
    status_t rc;
    sp<Camera> camera = get_native_camera(env, thiz, &context);
@@ -565,6 +570,7 @@ static void android_hardware_Camera_sendHistogramData(JNIEnv *env, jobject thiz)
    if (rc != NO_ERROR) {
       jniThrowException(env, "java/lang/RuntimeException", "set histogram mode failed");
      }
+#endif
  }
 void JNICameraContext::addCallbackBuffer(
         JNIEnv *env, jbyteArray cbb, int msgType)
diff --git a/media/java/android/media/CamcorderProfile.java b/media/java/android/media/CamcorderProfile.java
index d303a2e3988..6785670d192 100644
--- a/media/java/android/media/CamcorderProfile.java
+++ b/media/java/android/media/CamcorderProfile.java
@@ -206,6 +206,77 @@ public class CamcorderProfile
     private static final int QUALITY_HIGH_SPEED_LIST_START = QUALITY_HIGH_SPEED_LOW;
     private static final int QUALITY_HIGH_SPEED_LIST_END = QUALITY_HIGH_SPEED_2160P;
 
+    // Vendor-specific quality profiles
+    /**
+     * Quality level corresponding to the VGA (640 x 480) resolution.
+     * @hide
+     */
+    public static final int QUALITY_VGA = 10000;
+
+    /**
+     * Quality level corresponding to the 4k-DCI (4096 x 2160) resolution.
+     * @hide
+     */
+    public static final int QUALITY_4KDCI = 10001;
+
+    /**
+     * Time lapse quality level corresponding to the VGA (640 x 480) resolution.
+     * @hide
+     */
+    public static final int QUALITY_TIME_LAPSE_VGA = 10002;
+
+    /**
+     * Time lapse quality level corresponding to the 4k-DCI (4096 x 2160) resolution.
+     * @hide
+     */
+    public static final int QUALITY_TIME_LAPSE_4KDCI = 10003;
+
+    /**
+     * High speed ( >= 100fps) quality level corresponding to the CIF (352 x 288)
+     * @hide
+     */
+    public static final int QUALITY_HIGH_SPEED_CIF = 10004;
+
+    /**
+     * High speed ( >= 100fps) quality level corresponding to the VGA (640 x 480)
+     * @hide
+     */
+    public static final int QUALITY_HIGH_SPEED_VGA = 10005;
+
+    /**
+     * High speed ( >= 100fps) quality level corresponding to the 4K-DCI (4096 x 2160)
+     * @hide
+     */
+    public static final int QUALITY_HIGH_SPEED_4KDCI = 10006;
+
+    /**
+     * Quality level corresponding to QHD resolution
+     * @hide
+     */
+    public static final int QUALITY_QHD = 10007;
+
+    /**
+     * Quality level corresponding to 2K resolution
+     * @hide
+     */
+    public static final int QUALITY_2k = 10008;
+
+    /**
+     * Time lapse quality level corresponding to the QHD resolution.
+     * @hide
+     */
+    public static final int QUALITY_TIME_LAPSE_QHD = 10009;
+
+    /**
+     * Time lapse quality level corresponding to the 2K resolution.
+     * @hide
+     */
+    public static final int QUALITY_TIME_LAPSE_2k = 10010;
+
+    // Start and end of vendor quality list
+    private static final int QUALITY_VENDOR_LIST_START = QUALITY_VGA;
+    private static final int QUALITY_VENDOR_LIST_END = QUALITY_TIME_LAPSE_2k;
+
     /**
      * Default recording duration in seconds before the session is terminated.
      * This is useful for applications like MMS has limited file size requirement.
@@ -391,7 +462,9 @@ public class CamcorderProfile
               (quality >= QUALITY_TIME_LAPSE_LIST_START &&
                quality <= QUALITY_TIME_LAPSE_LIST_END) ||
                (quality >= QUALITY_HIGH_SPEED_LIST_START &&
-               quality <= QUALITY_HIGH_SPEED_LIST_END))) {
+               quality <= QUALITY_HIGH_SPEED_LIST_END) ||
+               (quality >= QUALITY_VENDOR_LIST_START &&
+               quality <= QUALITY_VENDOR_LIST_END))) {
             String errMessage = "Unsupported quality level: " + quality;
             throw new IllegalArgumentException(errMessage);
         }
diff --git a/media/jni/android_media_MediaProfiles.cpp b/media/jni/android_media_MediaProfiles.cpp
index 5bc80925eca..08da08a32da 100644
--- a/media/jni/android_media_MediaProfiles.cpp
+++ b/media/jni/android_media_MediaProfiles.cpp
@@ -169,8 +169,13 @@ static bool isCamcorderQualityKnown(int quality)
              quality <= CAMCORDER_QUALITY_LIST_END) ||
             (quality >= CAMCORDER_QUALITY_TIME_LAPSE_LIST_START &&
              quality <= CAMCORDER_QUALITY_TIME_LAPSE_LIST_END) ||
-             (quality >= CAMCORDER_QUALITY_HIGH_SPEED_LIST_START &&
-              quality <= CAMCORDER_QUALITY_HIGH_SPEED_LIST_END));
+            (quality >= CAMCORDER_QUALITY_HIGH_SPEED_LIST_START &&
+             quality <= CAMCORDER_QUALITY_HIGH_SPEED_LIST_END)
+#ifdef QCOM_HARDWARE
+            || (quality >= CAMCORDER_QUALITY_VENDOR_START &&
+             quality <= CAMCORDER_QUALITY_VENDOR_END)
+#endif
+            );
 }
 
 static jobject
-- 
2.20.1

