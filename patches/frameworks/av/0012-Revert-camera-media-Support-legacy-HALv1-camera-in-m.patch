From a8d91da64018f03334b493978f58a3adf90ad6d4 Mon Sep 17 00:00:00 2001
From: Adrian DC <radian.dc@gmail.com>
Date: Sat, 10 Aug 2019 22:03:48 +0200
Subject: [PATCH 12/12] Revert "camera/media: Support legacy HALv1 camera in
 mediaserver"

This reverts commit 37a2b8030101be08c37854dba8998bfd6a11217e.
---
 camera/cameraserver/Android.mk                     |  4 ----
 media/mediaserver/Android.bp                       | 12 ------------
 media/mediaserver/main_mediaserver.cpp             | 12 ------------
 services/camera/libcameraservice/Android.mk        |  4 ----
 services/camera/libcameraservice/CameraService.cpp |  8 --------
 5 files changed, 40 deletions(-)

diff --git a/camera/cameraserver/Android.mk b/camera/cameraserver/Android.mk
index de4b2df..b8c94e6 100644
--- a/camera/cameraserver/Android.mk
+++ b/camera/cameraserver/Android.mk
@@ -14,9 +14,6 @@
 
 LOCAL_PATH:= $(call my-dir)
 
-ifeq ($(TARGET_HAS_LEGACY_CAMERA_HAL1),true)
-$(warning Target has integrated cameraserver into mediaserver. This is weakening security measures introduced in 7.0)
-else
 include $(CLEAR_VARS)
 
 LOCAL_SRC_FILES:= \
@@ -43,4 +40,3 @@ LOCAL_CFLAGS += -Wall -Wextra -Werror -Wno-unused-parameter
 LOCAL_INIT_RC := cameraserver.rc
 
 include $(BUILD_EXECUTABLE)
-endif
diff --git a/media/mediaserver/Android.bp b/media/mediaserver/Android.bp
index bae19fe..186f9ea 100644
--- a/media/mediaserver/Android.bp
+++ b/media/mediaserver/Android.bp
@@ -42,16 +42,4 @@ cc_binary {
         "-Wall",
     ],
 
-    product_variables: {
-        has_legacy_camera_hal1: {
-            cflags: ["-DNO_CAMERA_SERVER"],
-            shared_libs: [
-                "libcameraservice",
-                "libgui",
-                "libhidltransport",
-                "android.hardware.camera.common@1.0",
-                "android.hardware.camera.provider@2.4",
-            ],
-        },
-    },
 }
diff --git a/media/mediaserver/main_mediaserver.cpp b/media/mediaserver/main_mediaserver.cpp
index b89ec3d..7b22b05 100644
--- a/media/mediaserver/main_mediaserver.cpp
+++ b/media/mediaserver/main_mediaserver.cpp
@@ -26,10 +26,6 @@
 #include "RegisterExtensions.h"
 
 // from LOCAL_C_INCLUDES
-#ifdef NO_CAMERA_SERVER
-#include "CameraService.h"
-#include <hidl/HidlTransportSupport.h>
-#endif
 #include "MediaPlayerService.h"
 #include "ResourceManagerService.h"
 
@@ -39,20 +35,12 @@ int main(int argc __unused, char **argv __unused)
 {
     signal(SIGPIPE, SIG_IGN);
 
-#ifdef NO_CAMERA_SERVER
-    // Set 3 threads for HIDL calls
-    hardware::configureRpcThreadpool(3, /*willjoin*/ false);
-#endif
-
     sp<ProcessState> proc(ProcessState::self());
     sp<IServiceManager> sm(defaultServiceManager());
     ALOGI("ServiceManager: %p", sm.get());
     AIcu_initializeIcuOrDie();
     MediaPlayerService::instantiate();
     ResourceManagerService::instantiate();
-#ifdef NO_CAMERA_SERVER
-    CameraService::instantiate();
-#endif
     registerExtensions();
     ProcessState::self()->startThreadPool();
     IPCThreadState::self()->joinThreadPool();
diff --git a/services/camera/libcameraservice/Android.mk b/services/camera/libcameraservice/Android.mk
index 636cae3..96261ab 100644
--- a/services/camera/libcameraservice/Android.mk
+++ b/services/camera/libcameraservice/Android.mk
@@ -94,10 +94,6 @@ LOCAL_EXPORT_C_INCLUDE_DIRS := \
 
 LOCAL_CFLAGS += -Wall -Wextra -Werror
 
-ifeq ($(TARGET_HAS_LEGACY_CAMERA_HAL1),true)
-    LOCAL_CFLAGS += -DNO_CAMERA_SERVER
-endif
-
 LOCAL_MODULE:= libcameraservice
 
 include $(BUILD_SHARED_LIBRARY)
diff --git a/services/camera/libcameraservice/CameraService.cpp b/services/camera/libcameraservice/CameraService.cpp
index 10ac0da..8a752b1 100644
--- a/services/camera/libcameraservice/CameraService.cpp
+++ b/services/camera/libcameraservice/CameraService.cpp
@@ -734,11 +734,7 @@ int32_t CameraService::mapToInterface(StatusInternal status) {
 Status CameraService::initializeShimMetadata(int cameraId) {
     int uid = getCallingUid();
 
-#ifdef NO_CAMERA_SERVER
-    String16 internalPackageName("media");
-#else
     String16 internalPackageName("cameraserver");
-#endif
     String8 id = String8::format("%d", cameraId);
     Status ret = Status::ok();
     sp<Client> tmp = nullptr;
@@ -820,9 +816,7 @@ Status CameraService::getLegacyParametersLazy(int cameraId,
 static bool isTrustedCallingUid(uid_t uid) {
     switch (uid) {
         case AID_MEDIA:        // mediaserver
-#ifndef NO_CAMERA_SERVER
         case AID_CAMERASERVER: // cameraserver
-#endif
         case AID_RADIO:        // telephony
             return true;
         default:
@@ -919,7 +913,6 @@ Status CameraService::validateClientPermissionsLocked(const String8& cameraId,
                 clientName8.string(), clientUid, clientPid, cameraId.string());
     }
 
-#ifndef NO_CAMERA_SERVER
     // Make sure the UID is in an active state to use the camera
     if (!mUidPolicy->isUidActive(callingUid, String16(clientName8))) {
         ALOGE("Access Denial: can't use the camera from an idle UID pid=%d, uid=%d",
@@ -928,7 +921,6 @@ Status CameraService::validateClientPermissionsLocked(const String8& cameraId,
                 "Caller \"%s\" (PID %d, UID %d) cannot open camera \"%s\" from background",
                 clientName8.string(), clientUid, clientPid, cameraId.string());
     }
-#endif
 
     // Only use passed in clientPid to check permission. Use calling PID as the client PID that's
     // connected to camera service directly.
-- 
2.7.4

