From 77abb0ded4f45d0a7714e20fcd06a5d800126dd2 Mon Sep 17 00:00:00 2001
From: Kyle Repinski <repinski23@gmail.com>
Date: Thu, 30 Apr 2015 02:13:56 -0500
Subject: [PATCH] Speed-up ARM memcmp by leveraging NEON.

Because NEON_UNALIGNED_ACCESS has never been defined, it has gone unused.
This change changes it to check for __ARM_FEATURE_UNALIGNED, defined by GCC.
This has improved speed by roughly 34% on my testcases.

Also, memcmp checks if HAVE_32_BYTE_CACHE_LINE is defined and adjusts for it;
this is true for Cortex-A9, so define it in cortex-a9 makefile.

Change-Id: I3c76ce7fa2796872e0171d5502b0ebd6e2893339
---
 libc/arch-arm/generic/bionic/memcmp.S | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libc/arch-arm/generic/bionic/memcmp.S b/libc/arch-arm/generic/bionic/memcmp.S
index 6643d55..886d899 100644
--- a/libc/arch-arm/generic/bionic/memcmp.S
+++ b/libc/arch-arm/generic/bionic/memcmp.S
@@ -63,7 +63,7 @@ ENTRY(memcmp)
  * Neon optimization
  * Comparing 32 bytes at a time
  */
-#if defined(__ARM_NEON__) && defined(NEON_UNALIGNED_ACCESS)
+#if defined(__ARM_NEON__) && defined(__ARM_FEATURE_UNALIGNED)
         subs        r2, r2, #32
         blo         3f
 
